git sname: petisco

install:
  run: pip install -U -r requirements/dev.txt

steps:
  clean:
    run:
    - rm -rf output
    - find . | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf
  build:
    run: pip install -e .[flask,sqlalchemy,redis,rabbitmq,pymongo]
  lint:
    run:
    - black .
    - flake8 petisco
  test:
    run: pytest
  test-end2end:
    envs:
      PETISCO_END2END_TESTS: True
      LUME_WAIT_HTTP_200_NUM_MAX_ATTEMPTS: 30
    setup:
    - docker run -d --rm --name petisco-rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management
    - docker run -d  --rm --name petisco-mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=password123 mongo
    wait_http_200: http://localhost:15672
    run: pytest -c pytest.end2end.ini
    teardown: docker stop petisco-rabbitmq && docker stop petisco-mongodb
  test-with-rabbitmq:
    envs:
      LUME_WAIT_HTTP_200_NUM_MAX_ATTEMPTS: 30
    setup:
      - docker run -d --rm --name petisco-rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management
      - docker run -d  --rm --name petisco-mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=password123 mongo
    wait_http_200: http://localhost:15672
    run: pytest
    teardown:
      - docker stop petisco-rabbitmq
      - docker stop petisco-mongodb
  test-command-line:
    run: petisco --version
  example-pubsub:
    setup_detach:
      log_filename: pubsub.log
      run:
        - python examples/pubsub/sub.py
    run:
      - python examples/pubsub/pub.py
      - sleep 2
    teardown: cat pubsub.log
  example-webhooks:
    envs:
      FLASK_APP: examples/webhooks/subscribed_app.py
    setup_detach:
      log_filename: webhook.log
      run: python -m flask run
    wait_http_200: http://localhost:5000/healthcheck
    run: python examples/webhooks/execute_webhook.py
    teardown: sleep 5; cat webhook.log



